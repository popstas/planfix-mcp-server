- planfix api swagger - https://help.planfix.com/restapidocs/swagger.json
- complex task filters - https://planfix.com/ru/help/REST_API:_Сложные_фильтры_задач
- complex contact filters - https://help.planfix.com/ru/REST_API:_Сложные_фильтры_контактов

lint all: `npm run lint src`
lint file: `npm run lint [filePath]`

Forbidden to use z.union for schema.

При изменении кода tools меняй также тесты, если у tool есть файл тестов.
Tool test location: `[toolName].test.ts`.
Run test command: `npm test [toolName]`.

tool test example:
```
import { describe, expect, it } from 'vitest';
import { runTool } from '../helpers.js';

describe('planfix_search_manager tool', () => {
  it('searches manager by email=smirnov@expertizeme.org and returns manager_id', async () => {
    const args = {
      email: 'smirnov@expertizeme.org',
    };
    const {valid, content} = await runTool('planfix_search_manager', args);
    expect(valid).toBe(true);

    const { managerId } = content;
    expect(typeof managerId).toBe('number');
    expect(managerId).toBeGreaterThan(0);
  });
});
```

Когда считаешь, что задача готова, перед окончательным ответом расскажи сводку голосом через smarthome_tts_voice.
Если просят ответить голосом, то используй smarthome_tts_voice для ответа.
